import express from 'express'
import jwt from 'jsonwebtoken'
import bcrypt from 'bcrypt'
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()
const router = express.Router()

// POST /api/login
router.post('/login', async (req, res) => {
  const { email, password, remember } = req.body

  if (!email || !password) {
    return res.status(400).json({ message: '–ü–∞—Ä–æ–ª—å –∏–ª–∏ email –Ω–µ —É–∫–∞–∑–∞–Ω—ã' })
  }

  // üîç –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email
  const user = await prisma.users.findUnique({
    where: { email },
  })

  if (!user) {
    return res.status(401).json({ message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' })
  }

  // üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
  const valid = await bcrypt.compare(password, user.password_hash)
  if (!valid) {
    return res.status(401).json({ message: '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ email' })
  }

  // ‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –ø–∞—Ä–æ–ª—è
  const lastChange = new Date(user.password_created_at || user.last_login || 0)
  const now = new Date()
  const diffDays = (now.getTime() - lastChange.getTime()) / (1000 * 60 * 60 * 24)

  if (diffDays > 90) {
    return res.status(403).json({ message: '–ü–∞—Ä–æ–ª—å —É—Å—Ç–∞—Ä–µ–ª. –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å.' })
  }

  // üé´ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞
  const token = jwt.sign(
    {
      id: user.id,
      email: user.email,
      role: user.role,
      moId: user.mo_id,
    },
    process.env.JWT_SECRET || 'secret',
    {
      expiresIn: remember ? '90d' : '2h',
    }
  )

  // ‚è±Ô∏è –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞
  await prisma.users.update({
    where: { id: user.id },
    data: { last_login: new Date() },
  })

  res.json({
  token,
  user: {
    id: user.id,
    email: user.email,
    role: user.role,
    moId: user.mo_id,
    fullName: user.full_name,
    lastLogin: user.last_login,
    passwordCreatedAt: user.password_created_at,
  }
 })
})

export default router
// TODO: –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è —á–µ—Ä–µ–∑ 3 –º–µ—Å—è—Ü–∞
// TODO: –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è —á–µ—Ä–µ–∑ 3 –º–µ—Å—è—Ü–∞ –Ω–∞ –ø–æ—á—Ç—É
